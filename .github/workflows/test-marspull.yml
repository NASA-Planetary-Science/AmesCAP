name: Test MarsPull

on:
  push:
    branches: [ devel ]
    paths:
      - 'bin/MarsPull'
      - 'bin/MarsPull.py'
      - 'amescap/**'
      - 'tests/test_marspull.py'
  pull_request:
    branches: [ devel ]
    paths:
      - 'bin/MarsPull'
      - 'bin/MarsPull.py'
      - 'amescap/**'
      - 'tests/test_marspull.py'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Create virtual environment
      run: |
        python -m venv amescap
        source amescap/bin/activate
        python -m pip install --upgrade pip
    
    - name: Install dependencies
      run: |
        source amescap/bin/activate
        pip install numpy requests unittest-mock pytest
    
    - name: Install AmesCAP for testing
      run: |
        source amescap/bin/activate
        pip install -e .
        
        # Ensure MarsPull is executable
        chmod +x bin/MarsPull
    
    - name: Debug environment
      run: |
        source amescap/bin/activate
        # Check environment
        echo "Python version:"
        python --version
        echo "Installed packages:"
        pip list
        echo "Directory contents:"
        ls -la
        echo "Bin directory contents:"
        ls -la bin/
        echo "Testing if MarsPull exists:"
        which MarsPull || echo "MarsPull not found in PATH"
        
    - name: Run tests
      run: |
        source amescap/bin/activate
        # Set PATH to include bin directory
        export PATH="$PATH:$(pwd)/bin"
        cd tests
        python -m unittest test_marspull.py
        
    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-output
        path: tests/*
